// We are modularizing this manually because the current modularize setting in Emscripten has some issues:
// https://github.com/kripken/emscripten/issues/5820
// In addition, When you use emcc's modularization, it still expects to export a global object called `Module`,
// which is able to be used/called before the WASM is loaded.
// The modularization below exports a promise that loads and resolves to the actual sql.js module.
// That way, this module can't be used before the WASM is finished loading.
let _sqleet = undefined;
const sqleet = moduleConfig => {
    if (_sqleet) {
        return _sqleet;
    }
    // If we're here, we've never called this function before
    _sqleet = new Promise((resolveModule, reject) => {
        // We are modularizing this manually because the current modularize setting in Emscripten has some issues:
        // https://github.com/kripken/emscripten/issues/5820
        // The way to affect the loading of emcc compiled modules is to create a variable called `Module` and add
        // properties to it, like `preRun`, `postRun`, etc
        // We are using that to get notified when the WASM has finished loading.
        // Only then will we return our promise
        // If they passed in a moduleConfig object, use that
        // Otherwise, initialize Module to the empty object
        // EMCC only allows for a single onAbort function (not an array of functions)
        // So if the user defined their own onAbort function, we remember it and call it

        // There is a section of code in the emcc-generated code below that looks like this:
        // (Note that this is lowercase `module`)
        // if (typeof module !== 'undefined') {
        //     module['exports'] = Module;
        // }
        // When that runs, it's going to overwrite our own modularization export efforts in shell-post.js!
        // The only way to tell emcc not to emit it is to pass the MODULARIZE=1 or MODULARIZE_INSTANCE=1 flags,
        // but that carries with it additional unnecessary baggage/bugs we don't want either.
        // So, we have three options:
        // 1) We undefine `module`
        // 2) We remember what `module['exports']` was at the beginning of this function and we restore it later
        // 3) We write a script to remove those lines of code as part of the Make process.
        //
        // Since those are the only lines of code that care about module, we will undefine it. It's the most straightforward
        // of the options, and has the side effect of reducing emcc's efforts to modify the module if its output were to change in the future.
        // That's a nice side effect since we're handling the modularization efforts ourselves
        // The emcc-generated code and shell-post.js code goes below,
        // meaning that all of it runs inside of this promise. If anything throws an exception, our promise will abort
        
        function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}function ba(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}var ca="undefined"!=typeof window&&window===this?this:"undefined"!=typeof global&&null!=global?global:this,da="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};
function ea(a,b){if(b){var c=ca;a=a.split(".");for(var d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&da(c,a,{configurable:!0,writable:!0,value:b})}}
ea("Promise",function(a){function b(a){this.tb=0;this.Cb=void 0;this.nb=[];var b=this.vb();try{a(b.resolve,b.reject)}catch(w){b.reject(w)}}function c(){this.nb=null}function d(a){return a instanceof b?a:new b(function(b){b(a)})}if(a)return a;c.prototype.tb=function(a){if(null==this.nb){this.nb=[];var b=this;this.vb(function(){b.Cb()})}this.nb.push(a)};var e=ca.setTimeout;c.prototype.vb=function(a){e(a,0)};c.prototype.Cb=function(){for(;this.nb&&this.nb.length;){var a=this.nb;this.nb=[];for(var b=
0;b<a.length;++b){var c=a[b];a[b]=null;try{c()}catch(y){this.zb(y)}}}this.nb=null};c.prototype.zb=function(a){this.vb(function(){throw a;})};b.prototype.vb=function(){function a(a){return function(d){c||(c=!0,a.call(b,d))}}var b=this,c=!1;return{resolve:a(this.cc),reject:a(this.zb)}};b.prototype.cc=function(a){if(a===this)this.zb(new TypeError("A Promise cannot resolve to itself"));else if(a instanceof b)this.pc(a);else{a:switch(typeof a){case "object":var c=null!=a;break a;case "function":c=!0;break a;
default:c=!1}c?this.bc(a):this.Nb(a)}};b.prototype.bc=function(a){var b=void 0;try{b=a.then}catch(w){this.zb(w);return}"function"==typeof b?this.qc(b,a):this.Nb(a)};b.prototype.zb=function(a){this.Pb(2,a)};b.prototype.Nb=function(a){this.Pb(1,a)};b.prototype.Pb=function(a,b){if(0!=this.tb)throw Error("Cannot settle("+a+", "+b+"): Promise already settled in state"+this.tb);this.tb=a;this.Cb=b;this.ac()};b.prototype.ac=function(){if(null!=this.nb){for(var a=0;a<this.nb.length;++a)g.tb(this.nb[a]);this.nb=
null}};var g=new c;b.prototype.pc=function(a){var b=this.vb();a.Gb(b.resolve,b.reject)};b.prototype.qc=function(a,b){var c=this.vb();try{a.call(b,c.resolve,c.reject)}catch(y){c.reject(y)}};b.prototype.then=function(a,c){function d(a,b){return"function"==typeof a?function(b){try{e(a(b))}catch(Tb){g(Tb)}}:b}var e,g,k=new b(function(a,b){e=a;g=b});this.Gb(d(a,e),d(c,g));return k};b.prototype.catch=function(a){return this.then(void 0,a)};b.prototype.Gb=function(a,b){function c(){switch(d.tb){case 1:a(d.Cb);
break;case 2:b(d.Cb);break;default:throw Error("Unexpected state: "+d.tb);}}var d=this;null==this.nb?g.tb(c):this.nb.push(c)};b.resolve=d;b.reject=function(a){return new b(function(b,c){c(a)})};b.race=function(a){return new b(function(b,c){for(var e=ba(a),g=e.next();!g.done;g=e.next())d(g.value).Gb(b,c)})};b.all=function(a){var c=ba(a),e=c.next();return e.done?d([]):new b(function(a,b){function g(b){return function(c){k[b]=c;m--;0==m&&a(k)}}var k=[],m=0;do k.push(void 0),m++,d(e.value).Gb(g(k.length-
1),b),e=c.next();while(!e.done)})};return b});var f,h;var l;l||(l=typeof Module !== 'undefined' ? Module : {});
(function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={uc:d,hc:!1,exports:{}};a[d].call(e.exports,e,e.exports,b);e.hc=!0;return e.exports}var c={};b.bc=a;b.Cb=c;b.tb=function(a,c,g){b.zb(a,c)||Object.defineProperty(a,c,{enumerable:!0,get:g})};b.vb=function(a){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"});Object.defineProperty(a,"__esModule",{value:!0})};b.ac=function(a,c){c&1&&(a=b(a));if(c&8)return a;if(c&4&&"object"===typeof a&&
a&&a.dc)return a;var d=Object.create(null);b.vb(d);Object.defineProperty(d,"default",{enumerable:!0,value:a});if(c&2&&"string"!=typeof a)for(var e in a)b.tb(d,e,function(b){return a[b]}.bind(null,e));return d};b.Nb=function(a){var c=a&&a.dc?function(){return a["default"]}:function(){return a};b.tb(c,"a",c);return c};b.zb=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};b.Pb="";return b(b.cc="./src/index.ts")})({"./src/Database.ts":function(){eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst Helper_1 = __webpack_require__(/*! ./Helper */ "./src/Helper.ts");\nconst Statement_1 = __webpack_require__(/*! ./Statement */ "./src/Statement.ts");\nconst sqlite3_1 = __webpack_require__(/*! ./lib/sqlite3 */ "./src/lib/sqlite3.ts");\nconst apiTemp = stackAlloc(4);\nconsole.log(Helper_1.SQLite.OK);\n// Represents an SQLite database\nclass Database {\n    constructor(data, identifier = \'default\') {\n        this.statements = {};\n        this.functions = {};\n        this.data = data;\n        this.identifier = identifier;\n    }\n    /* Mount the database\n     */\n    mount() {\n        return new Promise((resolve, reject) => {\n            FS.mkdir("/sqleet");\n            FS.mount(IDBFS, {}, "/sqleet");\n            return FS.syncfs(true, (err) => {\n                if (err) {\n                    return reject(err);\n                }\n                this.filename = "sqleet/" + this.identifier + ".db";\n                this.handleError(sqlite3_1.sqlite3_open(this.filename, apiTemp));\n                this.db = Module.getValue(apiTemp, "i32");\n                sqlite3_1.RegisterExtensionFunctions(this.db);\n                this.statements = {}; // A list of all prepared statements of the database\n                this.functions = {}; // A list of all user function of the database (created by create_function call)\n                return resolve();\n            });\n        });\n    }\n    /* Persist data on disk\n     */\n    saveChanges() {\n        if (!this.db) {\n            throw "Database closed";\n        }\n        return new Promise((resolve, reject) => {\n            return FS.syncfs(false, (err) => {\n                if (err) {\n                    return reject(err);\n                }\n                return resolve();\n            });\n        });\n    }\n    /* Execute an SQL query, ignoring the rows it returns.\n  \n      @param sql [String] a string containing some SQL text to execute\n      @param params [Array] (*optional*) When the SQL statement contains placeholders, you can pass them in here. They will be bound to the statement before it is executed.\n  \n      If you use the params argument, you **cannot** provide an sql string that contains several\n      queries (separated by \';\')\n  \n      @example Insert values in a table\n          db.run("INSERT INTO test VALUES (:age, :name)", {\':age\':18, \':name\':\'John\'});\n  \n      @return [Database] The database object (useful for method chaining)\n      */\n    run(sql, params) {\n        if (!this.db) {\n            throw "Database closed";\n        }\n        if (params) {\n            const stmt = this.prepare(sql, params);\n            stmt.step();\n            stmt.free();\n        }\n        else {\n            this.handleError(sqlite3_1.sqlite3_exec(this.db, sql, 0, 0, apiTemp));\n        }\n        return this;\n    }\n    /* Execute an SQL query, and returns the result.\n  \n      This is a wrapper against Database.prepare, Statement.step, Statement.get,\n      and Statement.free.\n  \n      The result is an array of result elements. There are as many result elements\n      as the number of statements in your sql string (statements are separated by a semicolon)\n  \n      Each result element is an object with two properties:\n          \'columns\' : the name of the columns of the result (as returned by Statement.getColumnNames())\n          \'values\' : an array of rows. Each row is itself an array of values\n  \n      *# Example use\n      We have the following table, named *test* :\n  \n      | id | age |  name  |\n      |:--:|:---:|:------:|\n      | 1  |  1  | Ling   |\n      | 2  |  18 | Paul   |\n      | 3  |  3  | Markus |\n  \n  \n      We query it like that:\n      ```javascript\n      var db = new SQL.Database();\n      var res = db.exec("SELECT id FROM test; SELECT age,name FROM test;");\n      ```\n  \n      `res` is now :\n      ```javascript\n          [\n              {columns: [\'id\'], values:[[1],[2],[3]]},\n              {columns: [\'age\',\'name\'], values:[[1,\'Ling\'],[18,\'Paul\'],[3,\'Markus\']]}\n          ]\n      ```\n  \n      @param sql [String] a string containing some SQL text to execute\n      @return [Array<QueryResults>] An array of results.\n      */\n    exec(sql) {\n        if (!this.db) {\n            throw "Database closed";\n        }\n        const stack = stackSave();\n        // Store the SQL string in memory. The string will be consumed, one statement\n        // at a time, by sqlite3_prepare_v2_sqlptr.\n        // Note that if we want to allocate as much memory as could _possibly_ be used, we can\n        // we allocate bytes equal to 4* the number of chars in the sql string.\n        // It would be faster, but this is probably a premature optimization\n        let nextSqlPtr = allocateUTF8OnStack(sql);\n        // Used to store a pointer to the next SQL statement in the string\n        const pzTail = stackAlloc(4);\n        const results = [];\n        while (Module.getValue(nextSqlPtr, "i8") !== Helper_1.NULL) {\n            Module.setValue(apiTemp, 0, "i32");\n            Module.setValue(pzTail, 0, "i32");\n            this.handleError(sqlite3_1.sqlite3_prepare_v2_sqlptr(this.db, nextSqlPtr, -1, apiTemp, pzTail));\n            const pStmt = Module.getValue(apiTemp, "i32"); //  pointer to a statement, or null\n            nextSqlPtr = Module.getValue(pzTail, "i32");\n            if (pStmt === Helper_1.NULL) {\n                continue; // Empty statement\n            }\n            const stmt = new Statement_1.Statement(pStmt, this);\n            let curresult = null;\n            while (stmt.step()) {\n                if (curresult === null) {\n                    curresult = {\n                        columns: stmt.getColumnNames(),\n                        values: []\n                    };\n                    results.push(curresult);\n                }\n                curresult.push(stmt.get());\n            }\n            stmt.free();\n        }\n        stackRestore(stack);\n        return results;\n    }\n    /* Execute an sql statement, and call a callback for each row of result.\n  \n      **Currently** this method is synchronous, it will not return until the callback has\n      been called on every row of the result. But this might change.\n  \n      @param sql [String] A string of SQL text. Can contain placeholders that will be\n      bound to the parameters given as the second argument\n      @param params [Array<String,Number,null,Uint8Array>] (*optional*) Parameters to bind\n      to the query\n      @param callback [Function(Object)] A function that will be called on each row of result\n      @param done [Function] A function that will be called when all rows have been retrieved\n  \n      @return [Database] The database object. Useful for method chaining\n  \n      @example Read values from a table\n          db.each("SELECT name,age FROM users WHERE age >= $majority",\n                          {$majority:18},\n                          function(row){console.log(row.name + " is a grown-up.")}\n                      );\n      */\n    each(sql, params, callback, done) {\n        if (typeof params === "function") {\n            done = () => callback();\n            callback = params;\n            params = undefined;\n        }\n        const stmt = this.prepare(sql, params);\n        while (stmt.step()) {\n            callback(stmt.getAsObject());\n        }\n        stmt.free();\n        if (typeof done === "function") {\n            return done();\n        }\n    }\n    /* Prepare an SQL statement\n      @param sql [String] a string of SQL, that can contain placeholders (\'?\', \':VVV\', \':AAA\', \'@AAA\')\n      @param params [Array] (*optional*) values to bind to placeholders\n      @return [Statement] the resulting statement\n      @throw [String] SQLite error\n      */\n    prepare(sql, params) {\n        Module.setValue(apiTemp, 0, "i32");\n        this.handleError(sqlite3_1.sqlite3_prepare_v2(this.db, sql, -1, apiTemp, Helper_1.NULL));\n        const pStmt = Module.getValue(apiTemp, "i32"); //  pointer to a statement, or null\n        if (pStmt === Helper_1.NULL) {\n            throw "Nothing to prepare";\n        }\n        const stmt = new Statement_1.Statement(pStmt, this);\n        if (!params) {\n            stmt.bind(params);\n        }\n        this.statements[pStmt] = stmt;\n        return stmt;\n    }\n    /* Exports the contents of the database to a binary array\n      @return [Uint8Array] An array of bytes of the SQLite3 database file\n      */\n    export() {\n        for (let _statement in this.statements) {\n            const stmt = this.statements[_statement];\n            stmt.free();\n        }\n        for (let _function in this.functions) {\n            const func = this.functions[_function];\n            removeFunction(func);\n        }\n        this.functions = {};\n        this.handleError(sqlite3_1.sqlite3_close_v2(this.db));\n        if (!this.filename) {\n            throw "Filename not available, did you used mount()?";\n        }\n        const binaryDb = FS.readFile(this.filename, {\n            encoding: "binary"\n        });\n        this.handleError(sqlite3_1.sqlite3_open(this.filename, apiTemp));\n        this.db = Module.getValue(apiTemp, "i32");\n        return binaryDb;\n    }\n    /* Close the database, and all associated prepared statements.\n  \n      The memory associated to the database and all associated statements\n      will be freed.\n  \n      **Warning**: A statement belonging to a database that has been closed cannot\n      be used anymore.\n  \n      Databases **must** be closed, when you\'re finished with them, or the\n      memory consumption will grow forever\n      */\n    close() {\n        let _;\n        for (_ in this.statements) {\n            const stmt = this.statements[_];\n            stmt["free"]();\n        }\n        for (_ in this.functions) {\n            const func = this.functions[_];\n            removeFunction(func);\n        }\n        this.functions = {};\n        this.handleError(sqlite3_1.sqlite3_close_v2(this.db));\n        return (this.db = null);\n    }\n    /* Delete the database\n      Same as close but also remove the database from IndexedDB\n    */\n    wipe() {\n        this.close();\n        return FS.unlink("/" + this.filename);\n    }\n    /* Analyze a result code, return null if no error occured, and throw\n      an error with a descriptive message otherwise\n      @nodoc\n      */\n    handleError(returnCode) {\n        if (returnCode === Helper_1.SQLite.OK) {\n            return null;\n        }\n        else {\n            const errmsg = sqlite3_1.sqlite3_errmsg(this.db);\n            throw new Error(errmsg);\n        }\n    }\n    /* Returns the number of rows modified, inserted or deleted by the\n      most recently completed INSERT, UPDATE or DELETE statement on the\n      database Executing any other type of SQL statement does not modify\n      the value returned by this function.\n  \n      @return [Number] the number of rows modified\n      */\n    getRowsModified() {\n        return sqlite3_1.sqlite3_changes(this.db);\n    }\n    /* Register a custom function with SQLite\n      @example Register a simple function\n          db.create_function("addOne", function(x) {return x+1;})\n          db.exec("SELECT addOne(1)") // = 2\n  \n      @param name [String] the name of the function as referenced in SQL statements.\n      @param func [Function] the actual function to be executed.\n      */\n    create_function(name, func) {\n        const wrapped_func = function (cx, argc, argv) {\n            // Parse the args from sqlite into JS objects\n            let result;\n            const args = [];\n            for (let i = 0, end = argc, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                const value_ptr = Module.getValue(argv + 4 * i, "i32");\n                var value_type = sqlite3_1.sqlite3_value_type(value_ptr);\n                const data_func = (() => {\n                    switch (false) {\n                        case value_type !== 1:\n                            return sqlite3_1.sqlite3_value_double;\n                        case value_type !== 2:\n                            return sqlite3_1.sqlite3_value_double;\n                        case value_type !== 3:\n                            return sqlite3_1.sqlite3_value_text;\n                        case value_type !== 4:\n                            return function (ptr) {\n                                const size = sqlite3_1.sqlite3_value_bytes(ptr);\n                                const blob_ptr = sqlite3_1.sqlite3_value_blob(ptr);\n                                const blob_arg = new Uint8Array(size);\n                                for (let j = 0, end1 = size, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n                                    blob_arg[j] = Module.HEAP8[blob_ptr + j];\n                                }\n                                return blob_arg;\n                            };\n                        default:\n                            return (ptr) => null;\n                    }\n                })();\n                const arg = data_func(value_ptr);\n                args.push(arg);\n            }\n            // Invoke the user defined function with arguments from SQLite\n            try {\n                result = func.apply(null, args);\n            }\n            catch (error) {\n                sqlite3_1.sqlite3_result_error(cx, error, -1);\n                return;\n            }\n            // Return the result of the user defined function to SQLite\n            switch (typeof result) {\n                case "boolean":\n                    sqlite3_1.sqlite3_result_int(cx, result ? 1 : 0);\n                    break;\n                case "number":\n                    sqlite3_1.sqlite3_result_double(cx, result);\n                    break;\n                case "string":\n                    sqlite3_1.sqlite3_result_text(cx, result, -1, -1);\n                    break;\n                case "object":\n                    if (result === null) {\n                        sqlite3_1.sqlite3_result_null(cx);\n                    }\n                    else if (result.length != null) {\n                        const blobptr = Module.allocate(result, "i8", Module.ALLOC_NORMAL);\n                        sqlite3_1.sqlite3_result_blob(cx, blobptr, result.length, -1);\n                        Module._free(blobptr);\n                    }\n                    else {\n                        sqlite3_1.sqlite3_result_error(cx, `Wrong API use : tried to return a value of an unknown type (${result}).`, -1);\n                    }\n                    break;\n                default:\n                    sqlite3_1.sqlite3_result_null(cx);\n            }\n        };\n        if (name in this.functions) {\n            removeFunction(this.functions[name]);\n            delete this.functions[name];\n        }\n        // Generate a pointer to the wrapped, user defined function, and register with SQLite.\n        const func_ptr = addFunction(wrapped_func);\n        this.functions[name] = func_ptr;\n        this.handleError(sqlite3_1.sqlite3_create_function_v2(this.db, name, func.length, Helper_1.SQLite.UTF8, 0, func_ptr, 0, 0, 0));\n        return this;\n    }\n}\nexports.default = Database;\n\n\n//# sourceURL=webpack:///./src/Database.ts?')},
"./src/Helper.ts":function(){eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.NULL = 0; // Null pointer\nvar SQLite;\n(function (SQLite) {\n    SQLite[SQLite["OK"] = 0] = "OK";\n    SQLite[SQLite["ERROR"] = 1] = "ERROR";\n    SQLite[SQLite["INTERNAL"] = 2] = "INTERNAL";\n    SQLite[SQLite["PERM"] = 3] = "PERM";\n    SQLite[SQLite["ABORT"] = 4] = "ABORT";\n    SQLite[SQLite["BUSY"] = 5] = "BUSY";\n    SQLite[SQLite["LOCKED"] = 6] = "LOCKED";\n    SQLite[SQLite["NOMEM"] = 7] = "NOMEM";\n    SQLite[SQLite["READONLY"] = 8] = "READONLY";\n    SQLite[SQLite["INTERRUPT"] = 9] = "INTERRUPT";\n    SQLite[SQLite["IOERR"] = 10] = "IOERR";\n    SQLite[SQLite["CORRUPT"] = 11] = "CORRUPT";\n    SQLite[SQLite["NOTFOUND"] = 12] = "NOTFOUND";\n    SQLite[SQLite["FULL"] = 13] = "FULL";\n    SQLite[SQLite["CANTOPEN"] = 14] = "CANTOPEN";\n    SQLite[SQLite["PROTOCOL"] = 15] = "PROTOCOL";\n    SQLite[SQLite["EMPTY"] = 16] = "EMPTY";\n    SQLite[SQLite["SCHEMA"] = 17] = "SCHEMA";\n    SQLite[SQLite["TOOBIG"] = 18] = "TOOBIG";\n    SQLite[SQLite["CONSTRAINT"] = 19] = "CONSTRAINT";\n    SQLite[SQLite["MISMATCH"] = 20] = "MISMATCH";\n    SQLite[SQLite["MISUSE"] = 21] = "MISUSE";\n    SQLite[SQLite["NOLFS"] = 22] = "NOLFS";\n    SQLite[SQLite["AUTH"] = 23] = "AUTH";\n    SQLite[SQLite["FORMAT"] = 24] = "FORMAT";\n    SQLite[SQLite["RANGE"] = 25] = "RANGE";\n    SQLite[SQLite["NOTADB"] = 26] = "NOTADB";\n    SQLite[SQLite["NOTICE"] = 27] = "NOTICE";\n    SQLite[SQLite["WARNING"] = 28] = "WARNING";\n    SQLite[SQLite["ROW"] = 100] = "ROW";\n    SQLite[SQLite["DONE"] = 101] = "DONE";\n    // Data types\n    SQLite[SQLite["INTEGER"] = 1] = "INTEGER";\n    SQLite[SQLite["FLOAT"] = 2] = "FLOAT";\n    SQLite[SQLite["TEXT"] = 3] = "TEXT";\n    SQLite[SQLite["BLOB"] = 4] = "BLOB";\n    SQLite[SQLite["NULL"] = 5] = "NULL";\n    // Encodings, used for registering functions. \n    SQLite[SQLite["UTF8"] = 1] = "UTF8";\n})(SQLite = exports.SQLite || (exports.SQLite = {}));\n\n\n//# sourceURL=webpack:///./src/Helper.ts?')},
"./src/Statement.ts":function(){eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Helper_1 = __webpack_require__(/*! ./Helper */ \"./src/Helper.ts\");\nconst sqlite3_1 = __webpack_require__(/*! ./lib/sqlite3 */ \"./src/lib/sqlite3.ts\");\nfunction __range__(left, right, inclusive) {\n    let range = [];\n    let ascending = left < right;\n    let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n    }\n    return range;\n}\n/* Represents a prepared statement.\n\nPrepared statements allow you to have a template sql string,\nthat you can execute multiple times with different parameters.\n\nYou can't instantiate this class directly, you have to use a [Database](Database.html)\nobject in order to create a statement.\n\n**Warning**: When you close a database (using db.close()), all its statements are\nclosed too and become unusable.\n\n@see Database.html#prepare-dynamic\n@see https://en.wikipedia.org/wiki/Prepared_statement\n*/\nclass Statement {\n    // Statements can't be created by the API user, only by Database::prepare\n    // @private\n    // @nodoc\n    constructor(stmt, db) {\n        this.stmt = stmt;\n        this.db = db;\n        this.pos = 1; // Index of the leftmost parameter is 1\n        this.allocatedmem = []; // Pointers to allocated memory, that need to be freed when the statemend is destroyed\n    }\n    /* Bind values to the parameters, after having reseted the statement\n  \n      SQL statements can have parameters, named *'?', '?NNN', ':VVV', '@VVV', '$VVV'*,\n      where NNN is a number and VVV a string.\n      This function binds these parameters to the given values.\n  \n      *Warning*: ':', '@', and '$' are included in the parameters names\n  \n      *# Binding values to named parameters\n      @example Bind values to named parameters\n          var stmt = db.prepare(\"UPDATE test SET a=@newval WHERE id BETWEEN $mini AND $maxi\");\n          stmt.bind({$mini:10, $maxi:20, '@newval':5});\n      - Create a statement that contains parameters like '$VVV', ':VVV', '@VVV'\n      - Call Statement.bind with an object as parameter\n  \n      *# Binding values to parameters\n      @example Bind values to anonymous parameters\n          var stmt = db.prepare(\"UPDATE test SET a=? WHERE id BETWEEN ? AND ?\");\n          stmt.bind([5, 10, 20]);\n       - Create a statement that contains parameters like '?', '?NNN'\n       - Call Statement.bind with an array as parameter\n  \n      *# Value types\n      Javascript type | SQLite type\n      --- | ---\n      number | REAL, INTEGER\n      boolean | INTEGER\n      string | TEXT\n      Array, Uint8Array | BLOB\n      null | NULL\n      @see http://www.sqlite.org/datatype3.html\n  \n      @see http://www.sqlite.org/lang_expr.html#varparam\n      @param values [Array,Object] The values to bind\n      @return [Boolean] true if it worked\n      @throw [String] SQLite Error\n      */\n    bind(values) {\n        if (!this.stmt) {\n            throw \"Statement closed\";\n        }\n        this.reset();\n        if (Array.isArray(values)) {\n            return this.bindFromArray(values);\n        }\n        else {\n            return this.bindFromObject(values);\n        }\n    }\n    /* Execute the statement, fetching the the next line of result,\n      that can be retrieved with [Statement.get()](#get-dynamic) .\n  \n      @return [Boolean] true if a row of result available\n      @throw [String] SQLite Error\n      */\n    step() {\n        let ret;\n        if (!this.stmt) {\n            throw \"Statement closed\";\n        }\n        this.pos = 1;\n        switch ((ret = sqlite3_1.sqlite3_step(this.stmt))) {\n            case Helper_1.SQLite.ROW:\n                return true;\n            case Helper_1.SQLite.DONE:\n                return false;\n            default:\n                return this.db.handleError(ret);\n        }\n    }\n    // Internal methods to retrieve data from the results of a statement that has been executed\n    getNumber(pos) {\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        return sqlite3_1.sqlite3_column_double(this.stmt, pos);\n    }\n    getString(pos) {\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        return sqlite3_1.sqlite3_column_text(this.stmt, pos);\n    }\n    getBlob(pos) {\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        const size = sqlite3_1.sqlite3_column_bytes(this.stmt, pos);\n        const ptr = sqlite3_1.sqlite3_column_blob(this.stmt, pos);\n        const result = new Uint8Array(size);\n        for (let i = 0, end = size, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n            result[i] = Module.HEAP8[ptr + i];\n        }\n        return result;\n    }\n    /* Get one row of results of a statement.\n      If the first parameter is not provided, step must have been called before get.\n      @param [Array,Object] Optional: If set, the values will be bound to the statement, and it will be executed\n      @return [Array<String,Number,Uint8Array,null>] One row of result\n  \n      @example Print all the rows of the table test to the console\n  \n          var stmt = db.prepare(\"SELECT * FROM test\");\n          while (stmt.step()) console.log(stmt.get());\n      */\n    get(params) {\n        // Get all fields\n        if (params != null) {\n            this.bind(params) && this.step();\n        }\n        return (() => {\n            const result = [];\n            for (let field = 0, end = sqlite3_1.sqlite3_data_count(this.stmt), asc = 0 <= end; asc ? field < end : field > end; asc ? field++ : field--) {\n                switch (sqlite3_1.sqlite3_column_type(this.stmt, field)) {\n                    case Helper_1.SQLite.INTEGER:\n                    case Helper_1.SQLite.FLOAT:\n                        result.push(this.getNumber(field));\n                        break;\n                    case Helper_1.SQLite.TEXT:\n                        result.push(this.getString(field));\n                        break;\n                    case Helper_1.SQLite.BLOB:\n                        result.push(this.getBlob(field));\n                        break;\n                    default:\n                        result.push(null);\n                }\n            }\n            return result;\n        })();\n    }\n    /* Get the list of column names of a row of result of a statement.\n      @return [Array<String>] The names of the columns\n      @example\n  \n          var stmt = db.prepare(\"SELECT 5 AS nbr, x'616200' AS data, NULL AS null_value;\");\n          stmt.step(); // Execute the statement\n          console.log(stmt.getColumnNames()); // Will print ['nbr','data','null_value']\n      */\n    getColumnNames() {\n        return __range__(0, sqlite3_1.sqlite3_data_count(this.stmt), false).map(i => sqlite3_1.sqlite3_column_name(this.stmt, i));\n    }\n    /* Get one row of result as a javascript object, associating column names with\n      their value in the current row.\n      @param [Array,Object] Optional: If set, the values will be bound to the statement, and it will be executed\n      @return [Object] The row of result\n      @see [Statement.get](#get-dynamic)\n  \n      @example\n  \n        const stmt = db.prepare(\"SELECT 5 AS nbr, x'616200' AS data, NULL AS null_value;\");\n        stmt.step(); // Execute the statement\n        console.log(stmt.getAsObject()); // Will print {nbr:5, data: Uint8Array([1,2,3]), null_value:null}\n      */\n    getAsObject(params) {\n        const values = this.get(params);\n        const names = this.getColumnNames();\n        const rowObject = {};\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            rowObject[name] = values[i];\n        }\n        return rowObject;\n    }\n    /* Shorthand for bind + step + reset\n      Bind the values, execute the statement, ignoring the rows it returns, and resets it\n      @param [Array,Object] Value to bind to the statement\n      */\n    run(values) {\n        if (values != null) {\n            this.bind(values);\n        }\n        this.step();\n        return this.reset();\n    }\n    // Internal methods to bind values to parameters\n    // @private\n    // @nodoc\n    bindString(string, pos) {\n        let strptr;\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        const bytes = Module.intArrayFromString(string);\n        this.allocatedmem.push((strptr = Module.allocate(bytes, \"i8\", Module.ALLOC_NORMAL)));\n        this.db.handleError(sqlite3_1.sqlite3_bind_text(this.stmt, pos, strptr, bytes.length - 1, 0));\n        return true;\n    }\n    // @nodoc\n    bindBlob(array, pos) {\n        let blobptr;\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        this.allocatedmem.push((blobptr = Module.allocate(array, \"i8\", Module.ALLOC_NORMAL)));\n        this.db.handleError(sqlite3_1.sqlite3_bind_blob(this.stmt, pos, blobptr, array.length, 0));\n        return true;\n    }\n    // @private\n    // @nodoc\n    bindNumber(num, pos) {\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        const bindfunc = num === (num | 0) ? sqlite3_1.sqlite3_bind_int : sqlite3_1.sqlite3_bind_double;\n        this.db.handleError(bindfunc(this.stmt, pos, num));\n        return true;\n    }\n    // @nodoc\n    bindNull(pos) {\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        return sqlite3_1.sqlite3_bind_blob(this.stmt, pos, 0, 0, 0) === Helper_1.SQLite.OK;\n    }\n    // Call bindNumber or bindString appropriatly\n    // @private\n    // @nodoc\n    bindValue(val, pos) {\n        if (pos == null) {\n            pos = this.pos++;\n        }\n        switch (typeof val) {\n            case \"string\":\n                return this.bindString(val, pos);\n            case \"number\":\n                return this.bindNumber(val, pos);\n            case \"boolean\":\n                return this.bindNumber(val ? 1 : 0, pos);\n            case \"object\":\n                if (val === null) {\n                    return this.bindNull(pos);\n                }\n                else if (val.length != null) {\n                    return this.bindBlob(val, pos);\n                }\n        }\n        throw `Wrong API use: tried to bind a value of an unknown type (${val}).`;\n    }\n    /* Bind names and values of an object to the named parameters of the statement\n      @param [Object]\n      @private\n      @nodoc\n      */\n    bindFromObject(valuesObj) {\n        for (let name in valuesObj) {\n            const value = valuesObj[name];\n            const num = sqlite3_1.sqlite3_bind_parameter_index(this.stmt, name);\n            if (num !== 0) {\n                this.bindValue(value, num);\n            }\n        }\n        return true;\n    }\n    /* Bind values to numbered parameters\n      @param [Array]\n      @private\n      @nodoc\n      */\n    bindFromArray(values) {\n        for (let num = 0; num < values.length; num++) {\n            const value = values[num];\n            this.bindValue(value, num + 1);\n        }\n        return true;\n    }\n    /* Reset a statement, so that it's parameters can be bound to new values\n      It also clears all previous bindings, freeing the memory used by bound parameters.\n      */\n    reset() {\n        this.freemem();\n        return (sqlite3_1.sqlite3_clear_bindings(this.stmt) === Helper_1.SQLite.OK &&\n            sqlite3_1.sqlite3_reset(this.stmt) === Helper_1.SQLite.OK);\n    }\n    /* Free the memory allocated during parameter binding\n     */\n    freemem() {\n        let mem;\n        while ((mem = this.allocatedmem.pop())) {\n            Module._free(mem);\n        }\n        return null;\n    }\n    /* Free the memory used by the statement\n      @return [Boolean] true in case of success\n      */\n    free() {\n        this.freemem();\n        const res = sqlite3_1.sqlite3_finalize(this.stmt) === Helper_1.SQLite.OK;\n        delete this.db.statements[this.stmt];\n        this.stmt = Helper_1.NULL;\n        return res;\n    }\n}\nexports.Statement = Statement;\n\n\n//# sourceURL=webpack:///./src/Statement.ts?")},
"./src/index.ts":function(){eval('\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result["default"] = mod;\n    return result;\n};\nfor (const configName in moduleConfig) {\n    Module[configName] = moduleConfig[configName];\n}\nconst originalOnAbortFunction = Module["onAbort"];\nModule["onAbort"] = function (errorThatCausedAbort) {\n    reject(new Error(errorThatCausedAbort));\n    if (originalOnAbortFunction) {\n        originalOnAbortFunction(errorThatCausedAbort);\n    }\n};\nModule[\'onRuntimeInitialized\'] = () => __awaiter(this, void 0, void 0, function* () {\n    // Resolve sqleet\n    resolveModule((yield Promise.resolve().then(() => __importStar(__webpack_require__(/*! ./Database */ "./src/Database.ts")))).default);\n});\n\n\n//# sourceURL=webpack:///./src/index.ts?')},
"./src/lib/sqlite3.ts":function(){eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sqlite3_open = Module.cwrap('sqlite3_open', 'number', ['string', 'number']);\nexports.sqlite3_close_v2 = Module.cwrap('sqlite3_close_v2', 'number', ['number']);\nexports.sqlite3_exec = Module.cwrap('sqlite3_exec', 'number', ['number', 'string', 'number', 'number', 'number']);\nexports.sqlite3_free = Module.cwrap('sqlite3_free', 'boolean', ['number']);\nexports.sqlite3_changes = Module.cwrap('sqlite3_changes', 'number', ['number']);\nexports.sqlite3_key = Module.cwrap('sqlite3_key', 'number', ['number', 'string', 'number']);\nexports.sqlite3_rekey = Module.cwrap('sqlite3_rekey', 'number', ['number', 'string', 'number']);\n// Prepared statements\n//# prepare\nexports.sqlite3_prepare_v2 = Module.cwrap('sqlite3_prepare_v2', 'number', ['number', 'string', 'number', 'number', 'number']);\n// Version of sqlite3_prepare_v2 to which a pointer to a string that is already\n// in memory is passed.\nexports.sqlite3_prepare_v2_sqlptr = Module.cwrap('sqlite3_prepare_v2', 'number', ['number', 'number', 'number', 'number', 'number']);\n//# Bind parameters\n//int sqlite3_bind_text(sqlite3_stmt*, int, export const char*, int n, void(*)(void*));\n// We declare export const char* as a number, because we will manually allocate the memory and pass a pointer to the function\nexports.sqlite3_bind_text = Module.cwrap('sqlite3_bind_text', 'number', ['number', 'number', 'number', 'number', 'number']);\nexports.sqlite3_bind_blob = Module.cwrap('sqlite3_bind_blob', 'number', ['number', 'number', 'number', 'number', 'number']);\n//int sqlite3_bind_double(sqlite3_stmt*, int, double);\nexports.sqlite3_bind_double = Module.cwrap('sqlite3_bind_double', 'number', ['number', 'number', 'number']);\n//int sqlite3_bind_double(sqlite3_stmt*, int, int);\nexports.sqlite3_bind_int = Module.cwrap('sqlite3_bind_int', 'number', ['number', 'number', 'number']);\n//int sqlite3_bind_parameter_index(sqlite3_stmt*, export const char *zName);\nexports.sqlite3_bind_parameter_index = Module.cwrap('sqlite3_bind_parameter_index', 'number', ['number', 'string']);\n//# Get values\n// int sqlite3_step(sqlite3_stmt*)\nexports.sqlite3_step = Module.cwrap('sqlite3_step', 'number', ['number']);\nexports.sqlite3_errmsg = Module.cwrap('sqlite3_errmsg', 'string', ['number']);\n// int sqlite3_data_count(sqlite3_stmt *pStmt);\nexports.sqlite3_data_count = Module.cwrap('sqlite3_data_count', 'number', ['number']);\nexports.sqlite3_column_double = Module.cwrap('sqlite3_column_double', 'number', ['number', 'number']);\nexports.sqlite3_column_text = Module.cwrap('sqlite3_column_text', 'string', ['number', 'number']);\nexports.sqlite3_column_blob = Module.cwrap('sqlite3_column_blob', 'number', ['number', 'number']);\nexports.sqlite3_column_bytes = Module.cwrap('sqlite3_column_bytes', 'number', ['number', 'number']);\nexports.sqlite3_column_type = Module.cwrap('sqlite3_column_type', 'number', ['number', 'number']);\n//export const char *sqlite3_column_name(sqlite3_stmt*, int N);\nexports.sqlite3_column_name = Module.cwrap('sqlite3_column_name', 'string', ['number', 'number']);\n// int sqlite3_reset(sqlite3_stmt *pStmt);\nexports.sqlite3_reset = Module.cwrap('sqlite3_reset', 'number', ['number']);\nexports.sqlite3_clear_bindings = Module.cwrap('sqlite3_clear_bindings', 'number', ['number']);\n// int sqlite3_finalize(sqlite3_stmt *pStmt);\nexports.sqlite3_finalize = Module.cwrap('sqlite3_finalize', 'number', ['number']);\n//# Create custom functions\nexports.sqlite3_create_function_v2 = Module.cwrap('sqlite3_create_function_v2', 'number', ['number', 'string', 'number', 'number', 'number', 'number', 'number', 'number', 'number']);\nexports.sqlite3_value_type = Module.cwrap('sqlite3_value_type', 'number', ['number']);\nexports.sqlite3_value_bytes = Module.cwrap('sqlite3_value_bytes', 'number', ['number']);\nexports.sqlite3_value_text = Module.cwrap('sqlite3_value_text', 'string', ['number']);\nexports.sqlite3_value_int = Module.cwrap('sqlite3_value_int', 'number', ['number']);\nexports.sqlite3_value_blob = Module.cwrap('sqlite3_value_blob', 'number', ['number']);\nexports.sqlite3_value_double = Module.cwrap('sqlite3_value_double', 'number', ['number']);\nexports.sqlite3_result_double = Module.cwrap('sqlite3_result_double', 'boolean', ['number', 'number']);\nexports.sqlite3_result_null = Module.cwrap('sqlite3_result_null', 'boolean', ['number']);\nexports.sqlite3_result_text = Module.cwrap('sqlite3_result_text', 'boolean', ['number', 'string', 'number', 'number']);\nexports.sqlite3_result_blob = Module.cwrap('sqlite3_result_blob', 'boolean', ['number', 'number', 'number', 'number']);\nexports.sqlite3_result_int = Module.cwrap('sqlite3_result_int', 'boolean', ['number', 'number']);\nexports.sqlite3_result_int64 = Module.cwrap('sqlite3_result_int64', 'boolean', ['number', 'number']);\nexports.sqlite3_result_error = Module.cwrap('sqlite3_result_error', 'boolean', ['number', 'string', 'number']);\nexports.RegisterExtensionFunctions = Module.cwrap('RegisterExtensionFunctions', 'number', ['number']);\n\n\n//# sourceURL=webpack:///./src/lib/sqlite3.ts?")}});
var n={},p;for(p in l)l.hasOwnProperty(p)&&(n[p]=l[p]);l.arguments=[];l.thisProgram="./this.program";l.quit=function(a,b){throw b;};l.preRun=[];l.postRun=[];var q=!1,r=!1,t=!1,fa=!1;q="object"===typeof window;r="function"===typeof importScripts;t="object"===typeof process&&"function"===typeof require&&!q&&!r;fa=!q&&!t&&!r;var u="";
if(t){u=__dirname+"/";var ha,ia;l.read=function(a,b){ha||(ha=require("fs"));ia||(ia=require("path"));a=ia.normalize(a);a=ha.readFileSync(a);return b?a:a.toString()};l.readBinary=function(a){a=l.read(a,!0);a.buffer||(a=new Uint8Array(a));assert(a.buffer);return a};1<process.argv.length&&(l.thisProgram=process.argv[1].replace(/\\/g,"/"));l.arguments=process.argv.slice(2);"undefined"!==typeof module&&(module.exports=l);process.on("unhandledRejection",v);l.quit=function(a){process.exit(a)};l.inspect=
function(){return"[Emscripten Module object]"}}else if(fa)"undefined"!=typeof read&&(l.read=function(a){return read(a)}),l.readBinary=function(a){if("function"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");assert("object"===typeof a);return a},"undefined"!=typeof scriptArgs?l.arguments=scriptArgs:"undefined"!=typeof arguments&&(l.arguments=arguments),"function"===typeof quit&&(l.quit=function(a){quit(a)});else if(q||r)r?u=self.location.href:document.currentScript&&(u=
document.currentScript.src),u=0!==u.indexOf("blob:")?u.substr(0,u.lastIndexOf("/")+1):"",l.read=function(a){var b=new XMLHttpRequest;b.open("GET",a,!1);b.send(null);return b.responseText},r&&(l.readBinary=function(a){var b=new XMLHttpRequest;b.open("GET",a,!1);b.responseType="arraybuffer";b.send(null);return new Uint8Array(b.response)}),l.readAsync=function(a,b,c){var d=new XMLHttpRequest;d.open("GET",a,!0);d.responseType="arraybuffer";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):
c()};d.onerror=c;d.send(null)},l.setWindowTitle=function(a){document.title=a};var ja=l.print||("undefined"!==typeof console?console.log.bind(console):"undefined"!==typeof print?print:null),x=l.printErr||("undefined"!==typeof printErr?printErr:"undefined"!==typeof console&&console.warn.bind(console)||ja);for(p in n)n.hasOwnProperty(p)&&(l[p]=n[p]);n=void 0;function ka(a){var b=z[la>>2];a=b+a+15&-16;if(a<=ma())z[la>>2]=a;else if(!na(a))return 0;return b}
function oa(a){switch(a){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:if("*"===a[a.length-1])return 4;if("i"===a[0]){var b=parseInt(a.substr(1));assert(0===b%8,"getNativeTypeSize invalid bits "+b+", type "+a);return b/8}return 0}}var pa={"f64-rem":function(a,b){return a%b},"debugger":function(){debugger}},A=Array(64);"object"!==typeof WebAssembly&&x("no native wasm support detected");var qa,ra=!1;
function assert(a,b){a||v("Assertion failed: "+b)}function sa(a){var b=l["_"+a];assert(b,"Cannot call unknown function "+a+", make sure it is exported");return b}
function ta(a,b,c,d){var e={string:function(a){var b=0;if(null!==a&&void 0!==a&&0!==a){var c=(a.length<<2)+1;b=ua(c);B(a,C,b,c)}return b},array:function(a){var b=ua(a.length);D.set(a,b);return b}},g=sa(a),k=[];a=0;if(d)for(var m=0;m<d.length;m++){var w=e[c[m]];w?(0===a&&(a=va()),k[m]=w(d[m])):k[m]=d[m]}c=g.apply(null,k);c=function(a){return"string"===b?E(a):"boolean"===b?!!a:a}(c);0!==a&&wa(a);return c}
function xa(a,b,c){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":D[a>>0]=b;break;case "i8":D[a>>0]=b;break;case "i16":ya[a>>1]=b;break;case "i32":z[a>>2]=b;break;case "i64":f=[b>>>0,(h=b,1<=+za(h)?0<h?(Aa(+Ba(h/4294967296),4294967295)|0)>>>0:~~+Ca((h-+(~~h>>>0))/4294967296)>>>0:0)];z[a>>2]=f[0];z[a+4>>2]=f[1];break;case "float":Da[a>>2]=b;break;case "double":Ga[a>>3]=b;break;default:v("invalid type for setValue: "+c)}}
function Ha(a,b,c,d){if("number"===typeof a){var e=!0;var g=a}else e=!1,g=a.length;var k="string"===typeof b?b:null;c=3==c?d:[Ia,ua,ka][c](Math.max(g,k?1:b.length));if(e){d=c;assert(0==(c&3));for(a=c+(g&-4);d<a;d+=4)z[d>>2]=0;for(a=c+g;d<a;)D[d++>>0]=0;return c}if("i8"===k)return a.subarray||a.slice?C.set(a,c):C.set(new Uint8Array(a),c),c;d=0;for(var m,w;d<g;){var y=a[d];e=k||b[d];0===e?d++:("i64"==e&&(e="i32"),xa(c+d,y,e),w!==e&&(m=oa(e),w=e),d+=m)}return c}
var Ja="undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0;
function Ka(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&Ja)return Ja.decode(a.subarray(b,c));for(d="";b<c;){var e=a[b++];if(e&128){var g=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|g);else{var k=a[b++]&63;e=224==(e&240)?(e&15)<<12|g<<6|k:(e&7)<<18|g<<12|k<<6|a[b++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}function E(a){return a?Ka(C,a,void 0):""}
function B(a,b,c,d){if(!(0<d))return 0;var e=c;d=c+d-1;for(var g=0;g<a.length;++g){var k=a.charCodeAt(g);if(55296<=k&&57343>=k){var m=a.charCodeAt(++g);k=65536+((k&1023)<<10)|m&1023}if(127>=k){if(c>=d)break;b[c++]=k}else{if(2047>=k){if(c+1>=d)break;b[c++]=192|k>>6}else{if(65535>=k){if(c+2>=d)break;b[c++]=224|k>>12}else{if(c+3>=d)break;b[c++]=240|k>>18;b[c++]=128|k>>12&63}b[c++]=128|k>>6&63}b[c++]=128|k&63}}b[c]=0;return c-e}
function La(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}"undefined"!==typeof TextDecoder&&new TextDecoder("utf-16le");function Ma(a){return a.replace(/__Z[\w\d_]+/g,function(a){return a===a?a:a+" ["+a+"]"})}function Na(a){0<a%65536&&(a+=65536-a%65536);return a}var buffer,D,C,ya,z,Da,Ga;
function Oa(){l.HEAP8=D=new Int8Array(buffer);l.HEAP16=ya=new Int16Array(buffer);l.HEAP32=z=new Int32Array(buffer);l.HEAPU8=C=new Uint8Array(buffer);l.HEAPU16=new Uint16Array(buffer);l.HEAPU32=new Uint32Array(buffer);l.HEAPF32=Da=new Float32Array(buffer);l.HEAPF64=Ga=new Float64Array(buffer)}var la=61040,Pa=l.TOTAL_MEMORY||16777216;5242880>Pa&&x("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+Pa+"! (TOTAL_STACK=5242880)");
l.buffer?buffer=l.buffer:"object"===typeof WebAssembly&&"function"===typeof WebAssembly.Memory?(qa=new WebAssembly.Memory({initial:Pa/65536}),buffer=qa.buffer):buffer=new ArrayBuffer(Pa);Oa();z[la>>2]=5303952;function Qa(a){for(;0<a.length;){var b=a.shift();if("function"==typeof b)b();else{var c=b.fc;"number"===typeof c?void 0===b.Lb?l.dynCall_v(c):l.dynCall_vi(c,b.Lb):c(void 0===b.Lb?null:b.Lb)}}}var Ra=[],Sa=[],Ta=[],Ua=[],Va=!1;function Wa(){var a=l.preRun.shift();Ra.unshift(a)}
var za=Math.abs,Ca=Math.ceil,Ba=Math.floor,Aa=Math.min,F=0,Xa=null,Ya=null;l.preloadedImages={};l.preloadedAudios={};function Za(){var a=G;return String.prototype.startsWith?a.startsWith("data:application/octet-stream;base64,"):0===a.indexOf("data:application/octet-stream;base64,")}var G="sql-wasm.wasm";if(!Za()){var $a=G;G=l.locateFile?l.locateFile($a,u):u+$a}
function ab(){try{if(l.wasmBinary)return new Uint8Array(l.wasmBinary);if(l.readBinary)return l.readBinary(G);throw"both async and sync fetching of the wasm failed";}catch(a){v(a)}}function bb(){return l.wasmBinary||!q&&!r||"function"!==typeof fetch?new Promise(function(a){a(ab())}):fetch(G,{credentials:"same-origin"}).then(function(a){if(!a.ok)throw"failed to load wasm binary file at '"+G+"'";return a.arrayBuffer()}).catch(function(){return ab()})}
function cb(a){function b(a){l.asm=a.exports;F--;l.monitorRunDependencies&&l.monitorRunDependencies(F);0==F&&(null!==Xa&&(clearInterval(Xa),Xa=null),Ya&&(a=Ya,Ya=null,a()))}function c(a){b(a.instance)}function d(a){bb().then(function(a){return WebAssembly.instantiate(a,e)}).then(a,function(a){x("failed to asynchronously prepare wasm: "+a);v(a)})}var e={env:a,global:{NaN:NaN,Infinity:Infinity},"global.Math":Math,asm2wasm:pa};F++;l.monitorRunDependencies&&l.monitorRunDependencies(F);if(l.instantiateWasm)try{return l.instantiateWasm(e,
b)}catch(g){return x("Module.instantiateWasm callback failed with error: "+g),!1}l.wasmBinary||"function"!==typeof WebAssembly.instantiateStreaming||Za()||"function"!==typeof fetch?d(c):WebAssembly.instantiateStreaming(fetch(G,{credentials:"same-origin"}),e).then(c,function(a){x("wasm streaming compile failed: "+a);x("falling back to ArrayBuffer instantiation");d(c)});return{}}
l.asm=function(a,b){b.memory=qa;b.table=new WebAssembly.Table({initial:2816,maximum:2816,element:"anyfunc"});b.__memory_base=1024;b.__table_base=0;return cb(b)};Sa.push({fc:function(){db()}});var H={};
function eb(a){if(eb.nb){var b=z[a>>2];var c=z[b>>2]}else eb.nb=!0,H.USER=H.LOGNAME="web_user",H.PATH="/",H.PWD="/",H.HOME="/home/web_user",H.LANG="C.UTF-8",H._=l.thisProgram,c=Va?Ia(1024):ka(1024),b=Va?Ia(256):ka(256),z[b>>2]=c,z[a>>2]=b;a=[];var d=0,e;for(e in H)if("string"===typeof H[e]){var g=e+"="+H[e];a.push(g);d+=g.length}if(1024<d)throw Error("Environment size exceeded TOTAL_ENV_SIZE!");for(e=0;e<a.length;e++){d=g=a[e];for(var k=c,m=0;m<d.length;++m)D[k++>>0]=d.charCodeAt(m);D[k>>0]=0;z[b+
4*e>>2]=c;c+=g.length+1}z[b+4*a.length>>2]=0}function fb(a){l.___errno_location&&(z[l.___errno_location()>>2]=a);return a}function gb(a,b){for(var c=0,d=a.length-1;0<=d;d--){var e=a[d];"."===e?a.splice(d,1):".."===e?(a.splice(d,1),c++):c&&(a.splice(d,1),c--)}if(b)for(;c;c--)a.unshift("..");return a}function I(a){var b="/"===a.charAt(0),c="/"===a.substr(-1);(a=gb(a.split("/").filter(function(a){return!!a}),!b).join("/"))||b||(a=".");a&&c&&(a+="/");return(b?"/":"")+a}
function hb(a){var b=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(a).slice(1);a=b[0];b=b[1];if(!a&&!b)return".";b&&(b=b.substr(0,b.length-1));return a+b}function ib(a){if("/"===a)return"/";var b=a.lastIndexOf("/");return-1===b?a:a.substr(b+1)}function jb(){var a=Array.prototype.slice.call(arguments,0);return I(a.join("/"))}function J(a,b){return I(a+"/"+b)}
function kb(){for(var a="",b=!1,c=arguments.length-1;-1<=c&&!b;c--){b=0<=c?arguments[c]:"/";if("string"!==typeof b)throw new TypeError("Arguments to path.resolve must be strings");if(!b)return"";a=b+"/"+a;b="/"===b.charAt(0)}a=gb(a.split("/").filter(function(a){return!!a}),!b).join("/");return(b?"/":"")+a||"."}var lb=[];function mb(a,b){lb[a]={input:[],output:[],Db:b};nb(a,ob)}
var ob={open:function(a){var b=lb[a.node.rdev];if(!b)throw new K(19);a.tty=b;a.seekable=!1},close:function(a){a.tty.Db.flush(a.tty)},flush:function(a){a.tty.Db.flush(a.tty)},read:function(a,b,c,d){if(!a.tty||!a.tty.Db.Zb)throw new K(6);for(var e=0,g=0;g<d;g++){try{var k=a.tty.Db.Zb(a.tty)}catch(m){throw new K(5);}if(void 0===k&&0===e)throw new K(11);if(null===k||void 0===k)break;e++;b[c+g]=k}e&&(a.node.timestamp=Date.now());return e},write:function(a,b,c,d){if(!a.tty||!a.tty.Db.Qb)throw new K(6);
try{for(var e=0;e<d;e++)a.tty.Db.Qb(a.tty,b[c+e])}catch(g){throw new K(5);}d&&(a.node.timestamp=Date.now());return e}},qb={Zb:function(a){if(!a.input.length){var b=null;if(t){var c=new Buffer(256),d=0,e=process.stdin.fd;if("win32"!=process.platform){var g=!1;try{e=fs.openSync("/dev/stdin","r"),g=!0}catch(k){}}try{d=fs.readSync(e,c,0,256,null)}catch(k){if(-1!=k.toString().indexOf("EOF"))d=0;else throw k;}g&&fs.closeSync(e);0<d?b=c.slice(0,d).toString("utf-8"):b=null}else"undefined"!=typeof window&&
"function"==typeof window.prompt?(b=window.prompt("Input: "),null!==b&&(b+="\n")):"function"==typeof readline&&(b=readline(),null!==b&&(b+="\n"));if(!b)return null;a.input=pb(b,!0)}return a.input.shift()},Qb:function(a,b){null===b||10===b?(ja(Ka(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(ja(Ka(a.output,0)),a.output=[])}},rb={Qb:function(a,b){null===b||10===b?(x(Ka(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<
a.output.length&&(x(Ka(a.output,0)),a.output=[])}},L={ub:null,qb:function(){return L.createNode(null,"/",16895,0)},createNode:function(a,b,c,d){if(24576===(c&61440)||4096===(c&61440))throw new K(1);L.ub||(L.ub={dir:{node:{sb:L.jb.sb,pb:L.jb.pb,lookup:L.jb.lookup,Eb:L.jb.Eb,rename:L.jb.rename,unlink:L.jb.unlink,rmdir:L.jb.rmdir,readdir:L.jb.readdir,symlink:L.jb.symlink},stream:{wb:L.mb.wb}},file:{node:{sb:L.jb.sb,pb:L.jb.pb},stream:{wb:L.mb.wb,read:L.mb.read,write:L.mb.write,Sb:L.mb.Sb,Ib:L.mb.Ib,
Jb:L.mb.Jb}},link:{node:{sb:L.jb.sb,pb:L.jb.pb,readlink:L.jb.readlink},stream:{}},Ub:{node:{sb:L.jb.sb,pb:L.jb.pb},stream:sb}});c=tb(a,b,c,d);M(c.mode)?(c.jb=L.ub.dir.node,c.mb=L.ub.dir.stream,c.kb={}):32768===(c.mode&61440)?(c.jb=L.ub.file.node,c.mb=L.ub.file.stream,c.ob=0,c.kb=null):40960===(c.mode&61440)?(c.jb=L.ub.link.node,c.mb=L.ub.link.stream):8192===(c.mode&61440)&&(c.jb=L.ub.Ub.node,c.mb=L.ub.Ub.stream);c.timestamp=Date.now();a&&(a.kb[b]=c);return c},sc:function(a){if(a.kb&&a.kb.subarray){for(var b=
[],c=0;c<a.ob;++c)b.push(a.kb[c]);return b}return a.kb},tc:function(a){return a.kb?a.kb.subarray?a.kb.subarray(0,a.ob):new Uint8Array(a.kb):new Uint8Array},Vb:function(a,b){var c=a.kb?a.kb.length:0;c>=b||(b=Math.max(b,c*(1048576>c?2:1.125)|0),0!=c&&(b=Math.max(b,256)),c=a.kb,a.kb=new Uint8Array(b),0<a.ob&&a.kb.set(c.subarray(0,a.ob),0))},mc:function(a,b){if(a.ob!=b)if(0==b)a.kb=null,a.ob=0;else{if(!a.kb||a.kb.subarray){var c=a.kb;a.kb=new Uint8Array(new ArrayBuffer(b));c&&a.kb.set(c.subarray(0,Math.min(b,
a.ob)))}else if(a.kb||(a.kb=[]),a.kb.length>b)a.kb.length=b;else for(;a.kb.length<b;)a.kb.push(0);a.ob=b}},jb:{sb:function(a){var b={};b.dev=8192===(a.mode&61440)?a.id:1;b.ino=a.id;b.mode=a.mode;b.nlink=1;b.uid=0;b.gid=0;b.rdev=a.rdev;M(a.mode)?b.size=4096:32768===(a.mode&61440)?b.size=a.ob:40960===(a.mode&61440)?b.size=a.link.length:b.size=0;b.atime=new Date(a.timestamp);b.mtime=new Date(a.timestamp);b.ctime=new Date(a.timestamp);b.xb=4096;b.blocks=Math.ceil(b.size/b.xb);return b},pb:function(a,
b){void 0!==b.mode&&(a.mode=b.mode);void 0!==b.timestamp&&(a.timestamp=b.timestamp);void 0!==b.size&&L.mc(a,b.size)},lookup:function(){throw ub[2];},Eb:function(a,b,c,d){return L.createNode(a,b,c,d)},rename:function(a,b,c){if(M(a.mode)){try{var d=N(b,c)}catch(g){}if(d)for(var e in d.kb)throw new K(39);}delete a.parent.kb[a.name];a.name=c;b.kb[c]=a;a.parent=b},unlink:function(a,b){delete a.kb[b]},rmdir:function(a,b){var c=N(a,b),d;for(d in c.kb)throw new K(39);delete a.kb[b]},readdir:function(a){var b=
[".",".."],c;for(c in a.kb)a.kb.hasOwnProperty(c)&&b.push(c);return b},symlink:function(a,b,c){a=L.createNode(a,b,41471,0);a.link=c;return a},readlink:function(a){if(40960!==(a.mode&61440))throw new K(22);return a.link}},mb:{read:function(a,b,c,d,e){var g=a.node.kb;if(e>=a.node.ob)return 0;a=Math.min(a.node.ob-e,d);if(8<a&&g.subarray)b.set(g.subarray(e,e+a),c);else for(d=0;d<a;d++)b[c+d]=g[e+d];return a},write:function(a,b,c,d,e,g){g=!1;if(!d)return 0;a=a.node;a.timestamp=Date.now();if(b.subarray&&
(!a.kb||a.kb.subarray)){if(g)return a.kb=b.subarray(c,c+d),a.ob=d;if(0===a.ob&&0===e)return a.kb=new Uint8Array(b.subarray(c,c+d)),a.ob=d;if(e+d<=a.ob)return a.kb.set(b.subarray(c,c+d),e),d}L.Vb(a,e+d);if(a.kb.subarray&&b.subarray)a.kb.set(b.subarray(c,c+d),e);else for(g=0;g<d;g++)a.kb[e+g]=b[c+g];a.ob=Math.max(a.ob,e+d);return d},wb:function(a,b,c){1===c?b+=a.position:2===c&&32768===(a.node.mode&61440)&&(b+=a.node.ob);if(0>b)throw new K(22);return b},Sb:function(a,b,c){L.Vb(a.node,b+c);a.node.ob=
Math.max(a.node.ob,b+c)},Ib:function(a,b,c,d,e,g,k){if(32768!==(a.node.mode&61440))throw new K(19);c=a.node.kb;if(k&2||c.buffer!==b&&c.buffer!==b.buffer){if(0<e||e+d<a.node.ob)c.subarray?c=c.subarray(e,e+d):c=Array.prototype.slice.call(c,e,e+d);a=!0;d=Ia(d);if(!d)throw new K(12);b.set(c,d)}else a=!1,d=c.byteOffset;return{lc:d,Kb:a}},Jb:function(a,b,c,d,e){if(32768!==(a.node.mode&61440))throw new K(19);if(e&2)return 0;L.mb.write(a,b,0,d,c,!1);return 0}}},O={Hb:!1,oc:function(){O.Hb=!!process.platform.match(/^win/);
var a=process.binding("constants");a.fs&&(a=a.fs);O.Wb={1024:a.O_APPEND,64:a.O_CREAT,128:a.O_EXCL,0:a.O_RDONLY,2:a.O_RDWR,4096:a.O_SYNC,512:a.O_TRUNC,1:a.O_WRONLY}},Tb:function(a){return Buffer.nb?Buffer.from(a):new Buffer(a)},qb:function(a){assert(t);return O.createNode(null,"/",O.Yb(a.Ob.root),0)},createNode:function(a,b,c){if(!M(c)&&32768!==(c&61440)&&40960!==(c&61440))throw new K(22);a=tb(a,b,c);a.jb=O.jb;a.mb=O.mb;return a},Yb:function(a){try{var b=fs.lstatSync(a);O.Hb&&(b.mode=b.mode|(b.mode&
292)>>2)}catch(c){if(!c.code)throw c;throw new K(-c.lb);}return b.mode},rb:function(a){for(var b=[];a.parent!==a;)b.push(a.name),a=a.parent;b.push(a.qb.Ob.root);b.reverse();return jb.apply(null,b)},ec:function(a){a&=-2656257;var b=0,c;for(c in O.Wb)a&c&&(b|=O.Wb[c],a^=c);if(a)throw new K(22);return b},jb:{sb:function(a){a=O.rb(a);try{var b=fs.lstatSync(a)}catch(c){if(!c.code)throw c;throw new K(-c.lb);}O.Hb&&!b.xb&&(b.xb=4096);O.Hb&&!b.blocks&&(b.blocks=(b.size+b.xb-1)/b.xb|0);return{dev:b.dev,ino:b.ino,
mode:b.mode,nlink:b.nlink,uid:b.uid,gid:b.gid,rdev:b.rdev,size:b.size,atime:b.atime,mtime:b.mtime,ctime:b.ctime,xb:b.xb,blocks:b.blocks}},pb:function(a,b){var c=O.rb(a);try{void 0!==b.mode&&(fs.chmodSync(c,b.mode),a.mode=b.mode),void 0!==b.size&&fs.truncateSync(c,b.size)}catch(d){if(!d.code)throw d;throw new K(-d.lb);}},lookup:function(a,b){var c=J(O.rb(a),b);c=O.Yb(c);return O.createNode(a,b,c)},Eb:function(a,b,c,d){a=O.createNode(a,b,c,d);b=O.rb(a);try{M(a.mode)?fs.mkdirSync(b,a.mode):fs.writeFileSync(b,
"",{mode:a.mode})}catch(e){if(!e.code)throw e;throw new K(-e.lb);}return a},rename:function(a,b,c){a=O.rb(a);b=J(O.rb(b),c);try{fs.renameSync(a,b)}catch(d){if(!d.code)throw d;throw new K(-d.lb);}},unlink:function(a,b){a=J(O.rb(a),b);try{fs.unlinkSync(a)}catch(c){if(!c.code)throw c;throw new K(-c.lb);}},rmdir:function(a,b){a=J(O.rb(a),b);try{fs.rmdirSync(a)}catch(c){if(!c.code)throw c;throw new K(-c.lb);}},readdir:function(a){a=O.rb(a);try{return fs.readdirSync(a)}catch(b){if(!b.code)throw b;throw new K(-b.lb);
}},symlink:function(a,b,c){a=J(O.rb(a),b);try{fs.symlinkSync(c,a)}catch(d){if(!d.code)throw d;throw new K(-d.lb);}},readlink:function(a){var b=O.rb(a);try{return b=fs.readlinkSync(b),b=vb.relative(vb.resolve(a.qb.Ob.root),b)}catch(c){if(!c.code)throw c;throw new K(-c.lb);}}},mb:{open:function(a){var b=O.rb(a.node);try{32768===(a.node.mode&61440)&&(a.Fb=fs.openSync(b,O.ec(a.flags)))}catch(c){if(!c.code)throw c;throw new K(-c.lb);}},close:function(a){try{32768===(a.node.mode&61440)&&a.Fb&&fs.closeSync(a.Fb)}catch(b){if(!b.code)throw b;
throw new K(-b.lb);}},read:function(a,b,c,d,e){if(0===d)return 0;try{return fs.readSync(a.Fb,O.Tb(b.buffer),c,d,e)}catch(g){throw new K(-g.lb);}},write:function(a,b,c,d,e){try{return fs.writeSync(a.Fb,O.Tb(b.buffer),c,d,e)}catch(g){throw new K(-g.lb);}},wb:function(a,b,c){if(1===c)b+=a.position;else if(2===c&&32768===(a.node.mode&61440))try{b+=fs.fstatSync(a.Fb).size}catch(d){throw new K(-d.lb);}if(0>b)throw new K(22);return b}}},wb=null,xb={},P=[],yb=1,Q=null,zb=!0,R={},K=null,ub={};
function S(a,b){a=kb("/",a);b=b||{};if(!a)return{path:"",node:null};var c={Xb:!0,Rb:0},d;for(d in c)void 0===b[d]&&(b[d]=c[d]);if(8<b.Rb)throw new K(40);a=gb(a.split("/").filter(function(a){return!!a}),!1);var e=wb;c="/";for(d=0;d<a.length;d++){var g=d===a.length-1;if(g&&b.parent)break;e=N(e,a[d]);c=J(c,a[d]);e.Ab&&(!g||g&&b.Xb)&&(e=e.Ab.root);if(!g||b.yb)for(g=0;40960===(e.mode&61440);)if(e=Ab(c),c=kb(hb(c),e),e=S(c,{Rb:b.Rb}).node,40<g++)throw new K(40);}return{path:c,node:e}}
function Bb(a){for(var b;;){if(a===a.parent)return a=a.qb.$b,b?"/"!==a[a.length-1]?a+"/"+b:a+b:a;b=b?a.name+"/"+b:a.name;a=a.parent}}function Cb(a,b){for(var c=0,d=0;d<b.length;d++)c=(c<<5)-c+b.charCodeAt(d)|0;return(a+c>>>0)%Q.length}function Db(a){var b=Cb(a.parent.id,a.name);a.Bb=Q[b];Q[b]=a}function Eb(a){var b=Cb(a.parent.id,a.name);if(Q[b]===a)Q[b]=a.Bb;else for(b=Q[b];b;){if(b.Bb===a){b.Bb=a.Bb;break}b=b.Bb}}
function N(a,b){var c;if(c=(c=T(a,"x"))?c:a.jb.lookup?0:13)throw new K(c,a);for(c=Q[Cb(a.id,b)];c;c=c.Bb){var d=c.name;if(c.parent.id===a.id&&d===b)return c}return a.jb.lookup(a,b)}
function tb(a,b,c,d){Fb||(Fb=function(a,b,c,d){a||(a=this);this.parent=a;this.qb=a.qb;this.Ab=null;this.id=yb++;this.name=b;this.mode=c;this.jb={};this.mb={};this.rdev=d},Fb.prototype={},Object.defineProperties(Fb.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}}}));a=new Fb(a,b,c,d);Db(a);return a}
function M(a){return 16384===(a&61440)}var Gb={r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218};function Hb(a){var b=["r","w","rw"][a&3];a&512&&(b+="w");return b}function T(a,b){if(zb)return 0;if(-1===b.indexOf("r")||a.mode&292){if(-1!==b.indexOf("w")&&!(a.mode&146)||-1!==b.indexOf("x")&&!(a.mode&73))return 13}else return 13;return 0}function Ib(a,b){try{return N(a,b),17}catch(c){}return T(a,"wx")}
function Jb(a,b,c){try{var d=N(a,b)}catch(e){return e.lb}if(a=T(a,"wx"))return a;if(c){if(!M(d.mode))return 20;if(d===d.parent||"/"===Bb(d))return 16}else if(M(d.mode))return 21;return 0}function Kb(a){var b=4096;for(a=a||0;a<=b;a++)if(!P[a])return a;throw new K(24);}
function Lb(a,b){Mb||(Mb=function(){},Mb.prototype={},Object.defineProperties(Mb.prototype,{object:{get:function(){return this.node},set:function(a){this.node=a}}}));var c=new Mb,d;for(d in a)c[d]=a[d];a=c;b=Kb(b);a.fd=b;return P[b]=a}var sb={open:function(a){a.mb=xb[a.node.rdev].mb;a.mb.open&&a.mb.open(a)},wb:function(){throw new K(29);}};function nb(a,b){xb[a]={mb:b}}
function Nb(a,b){var c="/"===b,d=!b;if(c&&wb)throw new K(16);if(!c&&!d){var e=S(b,{Xb:!1});b=e.path;e=e.node;if(e.Ab)throw new K(16);if(!M(e.mode))throw new K(20);}b={type:a,Ob:{},$b:b,kc:[]};a=a.qb(b);a.qb=b;b.root=a;c?wb=a:e&&(e.Ab=b,e.qb&&e.qb.kc.push(b))}function Ob(a,b,c){var d=S(a,{parent:!0}).node;a=ib(a);if(!a||"."===a||".."===a)throw new K(22);var e=Ib(d,a);if(e)throw new K(e);if(!d.jb.Eb)throw new K(1);return d.jb.Eb(d,a,b,c)}function U(a,b){Ob(a,(void 0!==b?b:511)&1023|16384,0)}
function Pb(a,b,c){"undefined"===typeof c&&(c=b,b=438);Ob(a,b|8192,c)}function Qb(a,b){if(!kb(a))throw new K(2);var c=S(b,{parent:!0}).node;if(!c)throw new K(2);b=ib(b);var d=Ib(c,b);if(d)throw new K(d);if(!c.jb.symlink)throw new K(1);c.jb.symlink(c,b,a)}function Ab(a){a=S(a).node;if(!a)throw new K(2);if(!a.jb.readlink)throw new K(22);return kb(Bb(a.parent),a.jb.readlink(a))}function Rb(a,b){a=S(a,{yb:!b}).node;if(!a)throw new K(2);if(!a.jb.sb)throw new K(1);return a.jb.sb(a)}
function Sb(a){return Rb(a,!0)}function Ub(a,b){var c;"string"===typeof a?c=S(a,{yb:!0}).node:c=a;if(!c.jb.pb)throw new K(1);c.jb.pb(c,{mode:b&4095|c.mode&-4096,timestamp:Date.now()})}function Vb(a){var b;"string"===typeof a?b=S(a,{yb:!0}).node:b=a;if(!b.jb.pb)throw new K(1);b.jb.pb(b,{timestamp:Date.now()})}
function Wb(a,b){if(0>b)throw new K(22);var c;"string"===typeof a?c=S(a,{yb:!0}).node:c=a;if(!c.jb.pb)throw new K(1);if(M(c.mode))throw new K(21);if(32768!==(c.mode&61440))throw new K(22);if(a=T(c,"w"))throw new K(a);c.jb.pb(c,{size:b,timestamp:Date.now()})}
function Xb(a,b,c,d){if(""===a)throw new K(2);if("string"===typeof b){var e=Gb[b];if("undefined"===typeof e)throw Error("Unknown file open mode: "+b);b=e}c=b&64?("undefined"===typeof c?438:c)&4095|32768:0;if("object"===typeof a)var g=a;else{a=I(a);try{g=S(a,{yb:!(b&131072)}).node}catch(k){}}e=!1;if(b&64)if(g){if(b&128)throw new K(17);}else g=Ob(a,c,0),e=!0;if(!g)throw new K(2);8192===(g.mode&61440)&&(b&=-513);if(b&65536&&!M(g.mode))throw new K(20);if(!e&&(c=g?40960===(g.mode&61440)?40:M(g.mode)&&
("r"!==Hb(b)||b&512)?21:T(g,Hb(b)):2))throw new K(c);b&512&&Wb(g,0);b&=-641;d=Lb({node:g,path:Bb(g),flags:b,seekable:!0,position:0,mb:g.mb,rc:[],error:!1},d);d.mb.open&&d.mb.open(d);!l.logReadFiles||b&1||(Yb||(Yb={}),a in Yb||(Yb[a]=1,console.log("FS.trackingDelegate error on read file: "+a)));try{R.onOpenFile&&(g=0,1!==(b&2097155)&&(g|=1),0!==(b&2097155)&&(g|=2),R.onOpenFile(a,g))}catch(k){console.log("FS.trackingDelegate['onOpenFile']('"+a+"', flags) threw an exception: "+k.message)}return d}
function Zb(a,b,c){if(null===a.fd)throw new K(9);if(!a.seekable||!a.mb.wb)throw new K(29);if(0!=c&&1!=c&&2!=c)throw new K(22);a.position=a.mb.wb(a,b,c);a.rc=[]}
function $b(a,b,c,d){var e=D;if(0>c||0>d)throw new K(22);if(null===a.fd)throw new K(9);if(0===(a.flags&2097155))throw new K(9);if(M(a.node.mode))throw new K(21);if(!a.mb.write)throw new K(22);a.flags&1024&&Zb(a,0,2);var g="undefined"!==typeof d;if(!g)d=a.position;else if(!a.seekable)throw new K(29);b=a.mb.write(a,e,b,c,d,void 0);g||(a.position+=b);try{if(a.path&&R.onWriteToFile)R.onWriteToFile(a.path)}catch(k){console.log("FS.trackingDelegate['onWriteToFile']('"+a.path+"') threw an exception: "+k.message)}return b}
function ac(){K||(K=function(a,b){this.node=b;this.nc=function(a){this.lb=a};this.nc(a);this.message="FS error";this.stack&&Object.defineProperty(this,"stack",{value:Error().stack,writable:!0})},K.prototype=Error(),K.prototype.constructor=K,[2].forEach(function(a){ub[a]=new K(a);ub[a].stack="<generic error, no stack>"}))}var bc;function cc(a,b){var c=0;a&&(c|=365);b&&(c|=146);return c}
function dc(a,b,c){a=J("/dev",a);var d=cc(!!b,!!c);ec||(ec=64);var e=ec++<<8|0;nb(e,{open:function(a){a.seekable=!1},close:function(){c&&c.buffer&&c.buffer.length&&c(10)},read:function(a,c,d,e){for(var g=0,k=0;k<e;k++){try{var m=b()}catch(xc){throw new K(5);}if(void 0===m&&0===g)throw new K(11);if(null===m||void 0===m)break;g++;c[d+k]=m}g&&(a.node.timestamp=Date.now());return g},write:function(a,b,d,e){for(var g=0;g<e;g++)try{c(b[d+g])}catch(Ea){throw new K(5);}e&&(a.node.timestamp=Date.now());return g}});
Pb(a,d,e)}var ec,V={},Fb,Mb,Yb,fc={};
function hc(a,b,c){try{var d=a(b)}catch(e){if(e&&e.node&&I(b)!==I(Bb(e.node)))return-20;throw e;}z[c>>2]=d.dev;z[c+4>>2]=0;z[c+8>>2]=d.ino;z[c+12>>2]=d.mode;z[c+16>>2]=d.nlink;z[c+20>>2]=d.uid;z[c+24>>2]=d.gid;z[c+28>>2]=d.rdev;z[c+32>>2]=0;f=[d.size>>>0,(h=d.size,1<=+za(h)?0<h?(Aa(+Ba(h/4294967296),4294967295)|0)>>>0:~~+Ca((h-+(~~h>>>0))/4294967296)>>>0:0)];z[c+40>>2]=f[0];z[c+44>>2]=f[1];z[c+48>>2]=4096;z[c+52>>2]=d.blocks;z[c+56>>2]=d.atime.getTime()/1E3|0;z[c+60>>2]=0;z[c+64>>2]=d.mtime.getTime()/
1E3|0;z[c+68>>2]=0;z[c+72>>2]=d.ctime.getTime()/1E3|0;z[c+76>>2]=0;f=[d.ino>>>0,(h=d.ino,1<=+za(h)?0<h?(Aa(+Ba(h/4294967296),4294967295)|0)>>>0:~~+Ca((h-+(~~h>>>0))/4294967296)>>>0:0)];z[c+80>>2]=f[0];z[c+84>>2]=f[1];return 0}var W=0;function X(){W+=4;return z[W-4>>2]}function Y(){return E(X())}function Z(){var a=P[X()];if(!a)throw new K(9);return a}function ma(){return D.length}
function ic(a){a=Na(a);var b=buffer.byteLength;try{return-1!==qa.grow((a-b)/65536)?(buffer=qa.buffer,!0):!1}catch(c){return!1}}function na(a){if(2147418112<a)return!1;for(var b=Math.max(ma(),16777216);b<a;)536870912>=b?b=Na(2*b):b=Math.min(Na((3*b+2147483648)/4),2147418112);if(!ic(b))return!1;Oa();return!0}function jc(a){if(0===a)return 0;a=E(a);if(!H.hasOwnProperty(a))return 0;jc.nb&&kc(jc.nb);a=H[a];var b=La(a)+1,c=Ia(b);c&&B(a,D,c,b);jc.nb=c;return jc.nb}B("GMT",C,60944,4);
function lc(){function a(a){return(a=a.toTimeString().match(/\(([A-Za-z ]+)\)$/))?a[1]:"GMT"}if(!mc){mc=!0;z[nc()>>2]=60*(new Date).getTimezoneOffset();var b=new Date(2E3,0,1),c=new Date(2E3,6,1);z[oc()>>2]=Number(b.getTimezoneOffset()!=c.getTimezoneOffset());var d=a(b),e=a(c);d=Ha(pb(d),"i8",0);e=Ha(pb(e),"i8",0);c.getTimezoneOffset()<b.getTimezoneOffset()?(z[pc()>>2]=d,z[pc()+4>>2]=e):(z[pc()>>2]=e,z[pc()+4>>2]=d)}}var mc;
function qc(a){a/=1E3;if((q||r)&&self.performance&&self.performance.now)for(var b=self.performance.now();self.performance.now()-b<a;);else for(b=Date.now();Date.now()-b<a;);return 0}l._usleep=qc;ac();Q=Array(4096);Nb(L,"/");U("/tmp");U("/home");U("/home/web_user");
(function(){U("/dev");nb(259,{read:function(){return 0},write:function(a,b,c,k){return k}});Pb("/dev/null",259);mb(1280,qb);mb(1536,rb);Pb("/dev/tty",1280);Pb("/dev/tty1",1536);if("object"===typeof crypto&&"function"===typeof crypto.getRandomValues){var a=new Uint8Array(1);var b=function(){crypto.getRandomValues(a);return a[0]}}else if(t)try{var c=require("crypto");b=function(){return c.randomBytes(1)[0]}}catch(d){}b||(b=function(){v("random_device")});dc("random",b);dc("urandom",b);U("/dev/shm");
U("/dev/shm/tmp")})();U("/proc");U("/proc/self");U("/proc/self/fd");Nb({qb:function(){var a=tb("/proc/self","fd",16895,73);a.jb={lookup:function(a,c){var b=P[+c];if(!b)throw new K(9);a={parent:null,qb:{$b:"fake"},jb:{readlink:function(){return b.path}}};return a.parent=a}};return a}},"/proc/self/fd");if(t){var fs=require("fs"),vb=require("path");O.oc()}function pb(a,b,c){c=Array(0<c?c:La(a)+1);a=B(a,c,0,c.length);b&&(c.length=a);return c}
var tc=l.asm({},{n:v,B:function(){return 0},l:function(a){return A[a]()},i:function(a,b){return A[a](b)},h:function(a,b,c){return A[a](b,c)},g:function(a,b,c,d){return A[a](b,c,d)},f:function(a,b,c,d,e){return A[a](b,c,d,e)},e:function(a,b,c,d,e,g){return A[a](b,c,d,e,g)},d:function(a,b,c,d,e,g,k){return A[a](b,c,d,e,g,k)},G:function(a,b,c,d,e,g,k){return A[a](b,c,d,e,g,k)},F:function(a,b,c,d,e){return A[a](b,c,d,e)},E:function(a,b,c){return A[a](b,c)},D:function(a,b,c,d){return A[a](b,c,d)},C:function(a,
b,c,d,e){return A[a](b,c,d,e)},A:function(a,b,c,d){return A[a](b,c,d)},c:function(a,b){A[a](b)},b:function(a,b,c){A[a](b,c)},k:function(a,b,c,d){A[a](b,c,d)},j:function(a,b,c,d,e){A[a](b,c,d,e)},z:function(a,b,c,d,e,g){A[a](b,c,d,e,g)},y:function(a,b,c,d){A[a](b,c,d)},x:function(a,b,c,d){A[a](b,c,d)},m:function(a,b,c,d){v("Assertion failed: "+E(a)+", at: "+[b?E(b):"unknown filename",c,d?E(d):"unknown function"])},la:eb,w:fb,ka:function(a,b){W=b;try{var c=Y(),d=S(c,{parent:!0}).node,e=ib(c),g=N(d,
e),k=Jb(d,e,!1);if(k)throw new K(k);if(!d.jb.unlink)throw new K(1);if(g.Ab)throw new K(16);try{R.willDeletePath&&R.willDeletePath(c)}catch(m){console.log("FS.trackingDelegate['willDeletePath']('"+c+"') threw an exception: "+m.message)}d.jb.unlink(d,e);Eb(g);try{if(R.onDeletePath)R.onDeletePath(c)}catch(m){console.log("FS.trackingDelegate['onDeletePath']('"+c+"') threw an exception: "+m.message)}return 0}catch(m){return"undefined"!==typeof V&&m instanceof K||v(m),-m.lb}},ja:function(a,b){W=b;try{return Z(),
0}catch(c){return"undefined"!==typeof V&&c instanceof K||v(c),-c.lb}},v:function(a,b){W=b;try{var c=Z(),d=X(),e=X(),g=X(),k=X();if(!(-1==d&&0>e||0==d&&0<=e))return-75;Zb(c,e,k);f=[c.position>>>0,(h=c.position,1<=+za(h)?0<h?(Aa(+Ba(h/4294967296),4294967295)|0)>>>0:~~+Ca((h-+(~~h>>>0))/4294967296)>>>0:0)];z[g>>2]=f[0];z[g+4>>2]=f[1];c.Mb&&0===e&&0===k&&(c.Mb=null);return 0}catch(m){return"undefined"!==typeof V&&m instanceof K||v(m),-m.lb}},u:function(a,b){W=b;try{var c=Z(),d=X();a:{var e=X();for(b=
a=0;b<e;b++){var g=$b(c,z[d+8*b>>2],z[d+(8*b+4)>>2],void 0);if(0>g){var k=-1;break a}a+=g}k=a}return k}catch(m){return"undefined"!==typeof V&&m instanceof K||v(m),-m.lb}},ia:function(a,b){W=b;try{var c=Y(),d=X();Ub(c,d);return 0}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},ha:function(a,b){W=b;try{var c=X(),d=X();if(0===d)return-22;if(d<La("/")+1)return-34;B("/",C,c,d);return c}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},ga:function(a,b){W=b;try{var c=
X(),d=X(),e=X(),g=X(),k=X(),m=X();m<<=12;a=!1;if(-1===k){var w=rc(16384,d);if(!w)return-12;sc(w,0,d);a=!0}else{var y=P[k];if(!y)return-9;b=C;if(1===(y.flags&2097155))throw new K(13);if(!y.mb.Ib)throw new K(19);var Ea=y.mb.Ib(y,b,c,d,m,e,g);w=Ea.lc;a=Ea.Kb}fc[w]={jc:w,ic:d,Kb:a,fd:k,flags:g};return w}catch(Fa){return"undefined"!==typeof V&&Fa instanceof K||v(Fa),-Fa.lb}},fa:function(a,b){W=b;try{var c=X();X();var d=X();X();var e=P[c];if(!e)throw new K(9);if(0===(e.flags&2097155))throw new K(22);Wb(e.node,
d);return 0}catch(g){return"undefined"!==typeof V&&g instanceof K||v(g),-g.lb}},t:function(a,b){W=b;try{var c=Y(),d=X();return hc(Rb,c,d)}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},ea:function(a,b){W=b;try{var c=Y(),d=X();return hc(Sb,c,d)}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},da:function(a,b){W=b;try{var c=Z(),d=X();return hc(Rb,c.path,d)}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},ca:function(a,b){W=b;return 42},ba:function(a,
b){W=b;return 0},aa:function(a,b){W=b;try{var c=X();X();X();var d=P[c];if(!d)throw new K(9);Vb(d.node);return 0}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},$:function(a,b){W=b;try{var c=Y();X();X();Vb(c);return 0}catch(d){return"undefined"!==typeof V&&d instanceof K||v(d),-d.lb}},o:function(a,b){W=b;try{var c=Z();switch(X()){case 0:var d=X();return 0>d?-22:Xb(c.path,c.flags,0,d).fd;case 1:case 2:return 0;case 3:return c.flags;case 4:return d=X(),c.flags|=d,0;case 12:return d=
X(),ya[d+0>>1]=2,0;case 13:case 14:return 0;case 16:case 8:return-22;case 9:return fb(22),-1;default:return-22}}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),-e.lb}},_:function(a,b){W=b;try{var c=Z(),d=X(),e=X();a=D;if(0>e||0>g)throw new K(22);if(null===c.fd)throw new K(9);if(1===(c.flags&2097155))throw new K(9);if(M(c.node.mode))throw new K(21);if(!c.mb.read)throw new K(22);b="undefined"!==typeof g;if(!b)var g=c.position;else if(!c.seekable)throw new K(29);var k=c.mb.read(c,a,d,e,g);
b||(c.position+=k);return k}catch(m){return"undefined"!==typeof V&&m instanceof K||v(m),-m.lb}},Z:function(a,b){W=b;try{var c=Y();var d=X();if(d&-8)var e=-22;else{var g=S(c,{yb:!0}).node;a="";d&4&&(a+="r");d&2&&(a+="w");d&1&&(a+="x");e=a&&T(g,a)?-13:0}return e}catch(k){return"undefined"!==typeof V&&k instanceof K||v(k),-k.lb}},Y:function(a,b){W=b;try{var c=Y(),d=X();a=c;a=I(a);"/"===a[a.length-1]&&(a=a.substr(0,a.length-1));U(a,d);return 0}catch(e){return"undefined"!==typeof V&&e instanceof K||v(e),
-e.lb}},X:function(a,b){W=b;try{var c=Z(),d=X(),e=X();return $b(c,d,e)}catch(g){return"undefined"!==typeof V&&g instanceof K||v(g),-g.lb}},W:function(a,b){W=b;try{var c=Y(),d=S(c,{parent:!0}).node,e=ib(c),g=N(d,e),k=Jb(d,e,!0);if(k)throw new K(k);if(!d.jb.rmdir)throw new K(1);if(g.Ab)throw new K(16);try{R.willDeletePath&&R.willDeletePath(c)}catch(m){console.log("FS.trackingDelegate['willDeletePath']('"+c+"') threw an exception: "+m.message)}d.jb.rmdir(d,e);Eb(g);try{if(R.onDeletePath)R.onDeletePath(c)}catch(m){console.log("FS.trackingDelegate['onDeletePath']('"+
c+"') threw an exception: "+m.message)}return 0}catch(m){return"undefined"!==typeof V&&m instanceof K||v(m),-m.lb}},V:function(a,b){W=b;try{var c=Y(),d=X(),e=X();return Xb(c,d,e).fd}catch(g){return"undefined"!==typeof V&&g instanceof K||v(g),-g.lb}},p:function(a,b){W=b;try{var c=Z();if(null===c.fd)throw new K(9);c.Mb&&(c.Mb=null);try{c.mb.close&&c.mb.close(c)}catch(d){throw d;}finally{P[c.fd]=null}c.fd=null;return 0}catch(d){return"undefined"!==typeof V&&d instanceof K||v(d),-d.lb}},U:function(a,
b){W=b;try{var c=Y(),d=X();var e=X();if(0>=e)var g=-22;else{var k=Ab(c),m=Math.min(e,La(k)),w=D[d+m];B(k,C,d,e+1);D[d+m]=w;g=m}return g}catch(y){return"undefined"!==typeof V&&y instanceof K||v(y),-y.lb}},T:function(a,b){W=b;try{var c=X(),d=X(),e=fc[c];if(!e)return 0;if(d===e.ic){var g=P[e.fd],k=e.flags,m=new Uint8Array(C.subarray(c,c+d));g&&g.mb.Jb&&g.mb.Jb(g,m,0,d,k);fc[c]=null;e.Kb&&kc(e.jc)}return 0}catch(w){return"undefined"!==typeof V&&w instanceof K||v(w),-w.lb}},S:function(a,b){W=b;try{var c=
X(),d=X(),e=P[c];if(!e)throw new K(9);Ub(e.node,d);return 0}catch(g){return"undefined"!==typeof V&&g instanceof K||v(g),-g.lb}},R:function(){l.abort()},Q:ma,P:function(a,b,c){C.set(C.subarray(b,b+c),a)},O:na,s:jc,r:function(a){var b=Date.now();z[a>>2]=b/1E3|0;z[a+4>>2]=b%1E3*1E3|0;return 0},N:function(a){return Math.log(a)/Math.LN10},q:function(){v("trap!")},M:function(a){lc();a=new Date(1E3*z[a>>2]);z[15224]=a.getSeconds();z[15225]=a.getMinutes();z[15226]=a.getHours();z[15227]=a.getDate();z[15228]=
a.getMonth();z[15229]=a.getFullYear()-1900;z[15230]=a.getDay();var b=new Date(a.getFullYear(),0,1);z[15231]=(a.getTime()-b.getTime())/864E5|0;z[15233]=-(60*a.getTimezoneOffset());var c=(new Date(2E3,6,1)).getTimezoneOffset();b=b.getTimezoneOffset();a=(c!=b&&a.getTimezoneOffset()==Math.min(b,c))|0;z[15232]=a;a=z[pc()+(a?4:0)>>2];z[15234]=a;return 60896},L:function(a,b){var c=z[a>>2];a=z[a+4>>2];0!==b&&(z[b>>2]=0,z[b+4>>2]=0);return qc(1E6*c+a/1E3)},K:function(a){switch(a){case 30:return 16384;case 85:return 131068;
case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;
case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;
case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator?navigator.hardwareConcurrency||1:1}fb(22);return-1},J:function(a){var b=Date.now()/1E3|0;a&&(z[a>>2]=b);return b},I:function(a,b){if(b){var c=1E3*z[b+8>>2];c+=z[b+12>>2]/1E3}else c=Date.now();a=E(a);try{b=c;var d=S(a,{yb:!0}).node;d.jb.pb(d,{timestamp:Math.max(b,c)});return 0}catch(e){a=e;if(!(a instanceof K)){a+=" : ";a:{d=Error();if(!d.stack){try{throw Error(0);
}catch(g){d=g}if(!d.stack){d="(no stack trace available)";break a}}d=d.stack.toString()}l.extraStackTrace&&(d+="\n"+l.extraStackTrace());d=Ma(d);throw a+d;}fb(a.lb);return-1}},H:function(){v("OOM")},a:la},buffer);l.asm=tc;l._RegisterExtensionFunctions=function(){return l.asm.ma.apply(null,arguments)};var db=l.___emscripten_environ_constructor=function(){return l.asm.na.apply(null,arguments)};l.___errno_location=function(){return l.asm.oa.apply(null,arguments)};
var oc=l.__get_daylight=function(){return l.asm.pa.apply(null,arguments)},nc=l.__get_timezone=function(){return l.asm.qa.apply(null,arguments)},pc=l.__get_tzname=function(){return l.asm.ra.apply(null,arguments)},kc=l._free=function(){return l.asm.sa.apply(null,arguments)},Ia=l._malloc=function(){return l.asm.ta.apply(null,arguments)},rc=l._memalign=function(){return l.asm.ua.apply(null,arguments)},sc=l._memset=function(){return l.asm.va.apply(null,arguments)};
l._sqlite3_bind_blob=function(){return l.asm.wa.apply(null,arguments)};l._sqlite3_bind_double=function(){return l.asm.xa.apply(null,arguments)};l._sqlite3_bind_int=function(){return l.asm.ya.apply(null,arguments)};l._sqlite3_bind_parameter_index=function(){return l.asm.za.apply(null,arguments)};l._sqlite3_bind_text=function(){return l.asm.Aa.apply(null,arguments)};l._sqlite3_changes=function(){return l.asm.Ba.apply(null,arguments)};l._sqlite3_clear_bindings=function(){return l.asm.Ca.apply(null,arguments)};
l._sqlite3_close_v2=function(){return l.asm.Da.apply(null,arguments)};l._sqlite3_column_blob=function(){return l.asm.Ea.apply(null,arguments)};l._sqlite3_column_bytes=function(){return l.asm.Fa.apply(null,arguments)};l._sqlite3_column_double=function(){return l.asm.Ga.apply(null,arguments)};l._sqlite3_column_name=function(){return l.asm.Ha.apply(null,arguments)};l._sqlite3_column_text=function(){return l.asm.Ia.apply(null,arguments)};l._sqlite3_column_type=function(){return l.asm.Ja.apply(null,arguments)};
l._sqlite3_create_function_v2=function(){return l.asm.Ka.apply(null,arguments)};l._sqlite3_data_count=function(){return l.asm.La.apply(null,arguments)};l._sqlite3_errmsg=function(){return l.asm.Ma.apply(null,arguments)};l._sqlite3_exec=function(){return l.asm.Na.apply(null,arguments)};l._sqlite3_finalize=function(){return l.asm.Oa.apply(null,arguments)};l._sqlite3_free=function(){return l.asm.Pa.apply(null,arguments)};l._sqlite3_open=function(){return l.asm.Qa.apply(null,arguments)};
l._sqlite3_prepare_v2=function(){return l.asm.Ra.apply(null,arguments)};l._sqlite3_reset=function(){return l.asm.Sa.apply(null,arguments)};l._sqlite3_result_blob=function(){return l.asm.Ta.apply(null,arguments)};l._sqlite3_result_double=function(){return l.asm.Ua.apply(null,arguments)};l._sqlite3_result_error=function(){return l.asm.Va.apply(null,arguments)};l._sqlite3_result_int=function(){return l.asm.Wa.apply(null,arguments)};l._sqlite3_result_int64=function(){return l.asm.Xa.apply(null,arguments)};
l._sqlite3_result_null=function(){return l.asm.Ya.apply(null,arguments)};l._sqlite3_result_text=function(){return l.asm.Za.apply(null,arguments)};l._sqlite3_step=function(){return l.asm._a.apply(null,arguments)};l._sqlite3_value_blob=function(){return l.asm.$a.apply(null,arguments)};l._sqlite3_value_bytes=function(){return l.asm.ab.apply(null,arguments)};l._sqlite3_value_double=function(){return l.asm.bb.apply(null,arguments)};l._sqlite3_value_int=function(){return l.asm.cb.apply(null,arguments)};
l._sqlite3_value_text=function(){return l.asm.db.apply(null,arguments)};l._sqlite3_value_type=function(){return l.asm.eb.apply(null,arguments)};var ua=l.stackAlloc=function(){return l.asm.gb.apply(null,arguments)},wa=l.stackRestore=function(){return l.asm.hb.apply(null,arguments)},va=l.stackSave=function(){return l.asm.ib.apply(null,arguments)};l.dynCall_vi=function(){return l.asm.fb.apply(null,arguments)};l.asm=tc;l.intArrayFromString=pb;
l.cwrap=function(a,b,c,d){c=c||[];var e=c.every(function(a){return"number"===a});return"string"!==b&&e&&!d?sa(a):function(){return ta(a,b,c,arguments)}};l.setValue=xa;l.getValue=function(a,b){b=b||"i8";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":return D[a>>0];case "i8":return D[a>>0];case "i16":return ya[a>>1];case "i32":return z[a>>2];case "i64":return z[a>>2];case "float":return Da[a>>2];case "double":return Ga[a>>3];default:v("invalid type for getValue: "+b)}return null};
l.allocate=Ha;l.stackSave=va;l.stackRestore=wa;l.stackAlloc=ua;function uc(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}uc.prototype=Error();uc.prototype.constructor=uc;Ya=function vc(){l.calledRun||wc();l.calledRun||(Ya=vc)};
function wc(){function a(){if(!l.calledRun&&(l.calledRun=!0,!ra)){Va||(Va=!0,l.noFSInit||bc||(bc=!0,ac(),l.stdin=l.stdin,l.stdout=l.stdout,l.stderr=l.stderr,l.stdin?dc("stdin",l.stdin):Qb("/dev/tty","/dev/stdin"),l.stdout?dc("stdout",null,l.stdout):Qb("/dev/tty","/dev/stdout"),l.stderr?dc("stderr",null,l.stderr):Qb("/dev/tty1","/dev/stderr"),Xb("/dev/stdin","r"),Xb("/dev/stdout","w"),Xb("/dev/stderr","w")),Qa(Sa));zb=!1;Qa(Ta);if(l.onRuntimeInitialized)l.onRuntimeInitialized();if(l.postRun)for("function"==
typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;){var a=l.postRun.shift();Ua.unshift(a)}Qa(Ua)}}if(!(0<F)){if(l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)Wa();Qa(Ra);0<F||l.calledRun||(l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1);a()},1)):a())}}l.run=wc;
function v(a){if(l.onAbort)l.onAbort(a);void 0!==a?(ja(a),x(a),a=JSON.stringify(a)):a="";ra=!0;throw"abort("+a+"). Build with -s ASSERTIONS=1 for more info.";}l.abort=v;if(l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);0<l.preInit.length;)l.preInit.pop()();l.noExitRuntime=!0;wc();


        // The shell-pre.js and emcc-generated code goes above
        return Module;
    }); // The end of the promise being returned
    return _sqleet;
};
// This bit below is copied almost exactly from what you get when you use the MODULARIZE=1 flag with emcc
// However, we don't want to use the emcc modularization. See shell-pre.js
if (typeof exports === "object" && typeof module === "object") {
    module.exports = sqleet;
    // This will allow the module to be used in ES6 or CommonJS
    module.exports.default = sqleet;
}
else if (typeof define === "function" && define["amd"]) {
    define([], () => sqleet);
}
else if (typeof exports === "object") {
    exports["Module"] = sqleet;
}
